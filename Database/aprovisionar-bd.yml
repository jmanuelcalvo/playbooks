---
- name: Aprovisionar Base de datos MariaDB y aseguramiento
  gather_facts: true
  hosts: all
  vars:
    mysql_root_password:
    database_name:
  tasks:
  - name: Instalar el motor de Base de datos Mariadb
    ansible.builtin.dnf:
      name:
        - mariadb-server
        - python3-PyMySQL
      state: latest
    tags: instalar

  - name: Iniciar el servicio de BD
    ansible.builtin.service:
      name: mariadb
      enabled: true
      state: started
    tags: instalar

  - name: Asegurar la BD Root Password
    community.mysql.mysql_user:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      user: root
      check_implicit_admin: true
      password: "{{ mysql_root_password }}"
      host: localhost
    tags: asegurar

  - name: Create usuario admin con all database privileges
    community.mysql.mysql_user:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      name: admin
      password: ABCde123.
      priv: '*.*:ALL'
      state: present
    tags: asegurar

#  - name: Asegurar la BD deshabilirar el root remoto
#    mysql_user:
#      check_implicit_admin: true
#      login_user: root
#      login_password: "{{ mysql_root_password }}"
#      user: root
#      host: "{{ ansible_fqdn }}"
#      state: absent
#    tags: asegurar

  - name: Habiliar el puerto de MySQL en el firewall local
    ansible.posix.firewalld:
      service: mysql
      permanent: true
      immediate: true
      state: enabled
    tags: asegurar

  - name: Crear una nueva BD
    community.mysql.mysql_db:
      name: testdb
      state: present
      login_user: root
      login_password: "{{ mysql_root_password }}"
    tags: aprovisionar

  - name: Copiar el dump de la base de datos
    ansible.builtin.copy:
      src: dump.sql
      dest: /tmp/dump.sql
    tags: aprovisionar

  - name: Importar dump de la base de datos
    community.mysql.mysql_db:
      name: "{{ database_name }}"
      state: import
      target: /tmp/dump.sql
      login_user: root
      login_password: "{{ mysql_root_password }}"
    tags: aprovisionar

  - name: Deploy aws instance
  
  

